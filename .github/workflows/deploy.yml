name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main  # Change if using another branch for deployment

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_BACKEND: ${{ secrets.ECR_REPOSITORY_BACKEND }}
  ECR_REPOSITORY_FRONTEND: ${{ secrets.ECR_REPOSITORY_FRONTEND }}
  ELASTIC_BEANSTALK_ENVIRONMENT: ${{ secrets.ELASTIC_BEANSTALK_ENVIRONMENT }}
  ELASTIC_BEANSTALK_APPLICATION: ${{ secrets.ELASTIC_BEANSTALK_APPLICATION }}
  S3_BUCKET: ${{ secrets.ELASTIC_BEANSTALK_S3_BUCKET }}

jobs:
  deploy:
    name: Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate with AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to AWS ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_BACKEND
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_FRONTEND

      # Build and push backend Docker image
      - name: Build and push Backend Docker image
        run: |
          docker build -t backend ./backend
          docker tag backend:latest $ECR_REPOSITORY_BACKEND:latest
          docker push $ECR_REPOSITORY_BACKEND:latest

      # Build and push frontend Docker image
      - name: Build and push Frontend Docker image
        run: |
          docker build -t frontend ./client
          docker tag frontend:latest $ECR_REPOSITORY_FRONTEND:latest
          docker push $ECR_REPOSITORY_FRONTEND:latest

      # Create application version in Elastic Beanstalk
      - name: Create Elastic Beanstalk application version
        run: |
          VERSION_LABEL=$(date +'%Y%m%d%H%M%S')
          echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV
          
          # Package and upload application version to S3
          zip -r deploy.zip Dockerfile .ebextensions/  # Ensure all necessary files are included
          aws s3 cp deploy.zip s3://$S3_BUCKET/deploy-$VERSION_LABEL.zip
          
          # Create application version in Elastic Beanstalk
          aws elasticbeanstalk create-application-version \
            --application-name $ELASTIC_BEANSTALK_APPLICATION \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=deploy-$VERSION_LABEL.zip

      # Deploy to AWS Elastic Beanstalk
      - name: Deploy to AWS Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name $ELASTIC_BEANSTALK_APPLICATION \
            --environment-name $ELASTIC_BEANSTALK_ENVIRONMENT \
            --version-label $VERSION_LABEL
