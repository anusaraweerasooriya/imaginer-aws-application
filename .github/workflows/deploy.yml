name: CI/CD for AWS Elastic Beanstalk (Without S3 Bucket)

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_BACKEND: ${{ secrets.ECR_REPOSITORY_BACKEND }}
  ECR_REPOSITORY_FRONTEND: ${{ secrets.ECR_REPOSITORY_FRONTEND }}
  ELASTIC_BEANSTALK_ENVIRONMENT: ${{ secrets.ELASTIC_BEANSTALK_ENVIRONMENT }}
  ELASTIC_BEANSTALK_APPLICATION: ${{ secrets.ELASTIC_BEANSTALK_APPLICATION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate Version Label
        run: echo "VERSION_LABEL=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_BACKEND
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_FRONTEND

      # Build and push backend Docker image
      - name: Build and Push Backend Docker Image
        run: |
          docker build -t backend ./backend
          docker tag backend:latest $ECR_REPOSITORY_BACKEND:latest
          docker push $ECR_REPOSITORY_BACKEND:latest

      # Build and push frontend Docker image
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t frontend ./client
          docker tag frontend:latest $ECR_REPOSITORY_FRONTEND:latest
          docker push $ECR_REPOSITORY_FRONTEND:latest

      - name: Update Image References in docker-compose.yml
        run: |
          sed -i "s|image: backend|image: $ECR_REPOSITORY_BACKEND:latest|g" docker-compose.yml
          sed -i "s|image: frontend|image: $ECR_REPOSITORY_FRONTEND:latest|g" docker-compose.yml

      - name: Install Elastic Beanstalk CLI
        run: |
          pip install --upgrade pip
          pip install awsebcli

      - name: Initialize Elastic Beanstalk Application
        run: |
          eb init -p docker $ELASTIC_BEANSTALK_APPLICATION --region $AWS_REGION

      - name: Create New Application Version
        run: |
          zip -r deploy.zip docker-compose.yml
          aws elasticbeanstalk create-application-version --application-name $ELASTIC_BEANSTALK_APPLICATION \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket="elasticbeanstalk-$AWS_REGION-$AWS_ACCOUNT_ID",S3Key="deploy.zip"

      - name: Set Environment Variables in Elastic Beanstalk
        run: |
          echo '[
            {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "AWS_ACCESS_KEY_ID", "Value": "${{ secrets.AWS_ACCESS_KEY_ID }}"},
            {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "AWS_SECRET_ACCESS_KEY", "Value": "${{ secrets.AWS_SECRET_ACCESS_KEY }}"}
          ]' > env-config.json

          aws elasticbeanstalk update-environment --application-name $ELASTIC_BEANSTALK_APPLICATION \
            --environment-name $ELASTIC_BEANSTALK_ENVIRONMENT \
            --option-settings file://env-config.json

      - name: Deploy to AWS Elastic Beanstalk
        run: |
          eb deploy $ELASTIC_BEANSTALK_ENVIRONMENT --timeout 30
